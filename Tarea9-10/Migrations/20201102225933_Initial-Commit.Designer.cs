// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarea9_10.Data;

namespace Tarea9_10.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201102225933_Initial-Commit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("Tarea9_10.Data.DatosCiviles", b =>
                {
                    b.Property<int>("DatosCivilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad_Hijos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado_Civil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nivel_Estudio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_Empresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_Pareja")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ocupacion_Actual")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Profesion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Razon_Suspension")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suspension_institucion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono_Trabajo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tienes_Hijos")
                        .HasColumnType("TEXT");

                    b.HasKey("DatosCivilesId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("DatosCivileses");
                });

            modelBuilder.Entity("Tarea9_10.Data.DatosEclesiasticos", b =>
                {
                    b.Property<int>("DatosEclesiasticosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad_Disciplinado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Causas_Disciplinado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Denominacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estas_Consciente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Aceptado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Bautismo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Conversion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ha_Disiciplinado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Iglesia_Actual")
                        .HasColumnType("TEXT");

                    b.Property<string>("Iglesia_Antes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Meta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerio_Fruto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerio_Llamando")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerios_Servido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_Pastor")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Razon_Fruto")
                        .HasColumnType("TEXT");

                    b.HasKey("DatosEclesiasticosId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("DatosEclesiasticoses");
                });

            modelBuilder.Entity("Tarea9_10.Data.Ocupacion", b =>
                {
                    b.Property<int>("OcupacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OcupacionId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Ocupaciones");
                });

            modelBuilder.Entity("Tarea9_10.Data.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ciudad_Actual")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ciudad_Nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo_Electronico")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento_Identidad")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero_Identidad")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais_Actual")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais_Nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Tarea9_10.Data.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_Usuario")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Tarea9_10.Data.DatosCiviles", b =>
                {
                    b.HasOne("Tarea9_10.Data.Persona", null)
                        .WithOne("DatosCiviles")
                        .HasForeignKey("Tarea9_10.Data.DatosCiviles", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tarea9_10.Data.DatosEclesiasticos", b =>
                {
                    b.HasOne("Tarea9_10.Data.Persona", null)
                        .WithOne("DatosEclesiasticos")
                        .HasForeignKey("Tarea9_10.Data.DatosEclesiasticos", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tarea9_10.Data.Ocupacion", b =>
                {
                    b.HasOne("Tarea9_10.Data.Persona", "Persona")
                        .WithMany("_Ocupaciones")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Tarea9_10.Data.Usuario", b =>
                {
                    b.HasOne("Tarea9_10.Data.Persona", null)
                        .WithOne("Usuarios")
                        .HasForeignKey("Tarea9_10.Data.Usuario", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tarea9_10.Data.Persona", b =>
                {
                    b.Navigation("_Ocupaciones");

                    b.Navigation("DatosCiviles");

                    b.Navigation("DatosEclesiasticos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
